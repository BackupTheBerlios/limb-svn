Version 2.2
(04 May 2004, from /trunk)
svn://svn.berlios.de/limb/2.2

  --  ***WARNING***: BC break! API of controllers, actions has changed! 
  
  --  fixed: db_module - now column_types array passed into sql_update method
  --  fixed: template source display action crashed with force_compile flag set to 0(issue #981986)
  --  fixed: materialized_path::get_max_child_identifier() error value(issue #982675)
  
  --  initial revision of the interception filters implementation, 
      this led to the vast refactoring of ALL actions. Have a look at root.php :)
  --  new request class resposible for incapsulating of all request specific operations, 
      this one should also help in future testing. You can't just use $_REQUEST['parameter'] variable any longer, 
      use request->get_attribute('parameter') instead
  --  new http_response class responsible for 'deferred' client responses, redirects, headers etc
  --  optimizations of fetcher
  --  got FINALLY rid of old confusing responses classes! The execution status is stored in request instead
  --  new jip_filter implemented. By default the fetcher now assigns actions for the requested object only. 
      jip_filter enables JIP if the user is logged in and he is a member of at least one of groups 
      listed in jip_groups.ini file (stored in settings dir).
  --  fixed: node_links_datasource bug - it caused to undefined array index error if the linked object was not fetched.
  --  minor optimizations based on XDebug output: locale, template tags, etc
  --  all validation rules are instantiated via resolve_handle, it touched all form actions in some way
  --  create_object function in objects_support.inc.php was refactored, it uses resolve_handle too, no eval no more!
  --  new refactored version of the uri class
  --  RFE: minor changes flag implemented(issue #958901)
  --  RFE: flexible page caching(issue #970358)
  --  RFE: IMG caching functionality(issue #977471)
  --  new register_testing_ini function for testing purposes allowing to override ini file access inside test case
  --  WACT output cache renamed, <core:OUTPUTCACHE> => <core:LITECACHE>, <core:OUTPUTCACHE> is used for the page partial
      caching
  --  ini class is heavily tested and refactored
  --  fetch_one_by_id() global function added to 'shortcut' fetcher :: fetch_one_by_id()
  --  added new datatype 'float' to db_module. It includes some dirty hacking - international float format 
      transformations, e.g. using comma instead of dot separator
  --  /core/lib/locale renamed to /core/lib/i18n
  --  new <control_button> tag
  --  refactored common.js: from now it will be a common practice to pass DOM element itself not its id 
      since there maybe several DOM elements with the same id on the page
      (which is likely not valid, yet it's not that easy to avoid :( )
  --  dir class was renamed to fs(file system) class since it's a more appropriate name
  --  new dataspace_registry: instance method was removed from dataspace, it makes dataspace much cleaner and 
      will help us to use WACT implementation transparently
  --  cron manager and cron jobs new implementation
  --  fetcher :: flush_cache() is called in form_edit_site_object action and set_publish_status action.
  --  response => http_response, response is just an abstract class now, 
  --  new nonbuffered_response class added
  --  <form> tag MUST have 'name' attribute now
  --  search_fetcher :: fetch() now can analyze $params['restricted_classes'] && $params['allowed_classes'] and 
      transfer their ids to full_text_search :: find() method, which returns object ids only with needed class_ids. 
      This is useful when you want to execute full text search on site excluding several object types from result 
      or including in result only several needed object types.
      search_fetcher :: search_fetch_sub_branch() can't perform such restriction in easy way for now because 
      it works directly with tree.  

Version 2.1.1
(16 Jun 2004, from /trunk)
svn://svn.berlios.de/limb/2.1.1

  --  ***WARNING***: BC break! API of controllers, actions has changed! 
  --  controllers, actions are greatly refactored in order to simplify inheritance(packages preparation)
  --  RFE: unified delete site object action (issue #959366)
  --  new SiteObjectsTestManager allowing to run specific site object testers
  --  russian language pack added to phpbb forum
  --  node select component doesn't try to get mapped node id if value is not set, it's a 
      form_create_site_object's resposibility to set it ptoperly, thus we decrease coupling, i guess...
  --  create_link_action doesn't set non-existent node id now, there's simply no need for that(see above)  
  --  RFE: initial revision of site objects linking functionality(#970235 issue)
  --  RFE: it's possible to select parent node with node select component (part of the #971013 issue)
  --  new tree_node_id_rule
  --  added tree_node_id_rule into form_create_site_object_action and form_edit_site_object_action  
  --  request_state component now takes its value from the $_REQUEST on the first display only   

Version 2.1
(04 May 2004, from /2.0.8)
svn://svn.berlios.de/limb/2.1

  --  fixed: node select component would set its value wrong
  --  fixed: control_flow.php bug (issue #969501)
  --  fixed: value localization in form components moved at runtime(issue #968107)
  --  fixed: JS window.onunload function for richedit
  --  fixed: pager sporadically wouldn't show paginated links (issue #964194)
  --  fixed: <hint> tag is Mozilla, Opera compatible (issue #964192)
  --  fixed: full_text_search can perform fulltext search with mysqlversion >= 3.23. 
      and it returns empty result instead of raising error.
  --  fixed: all JS document.all[...] calls replaced with document.getElementById
  --  fixed: materialized_path_driver for tree bug fixed. 
      Now, if there are 2 or more sub_trees in objects tree, 
      get_sub_branch() method with 'check_expanded_parents' option works properly 
      (result set included nodes from another sub_tree before)
  --  fixed: 'has_more_than_one_page' typo in pager tags, components
  --  fixed: mod_rewrite compatibility
  --  fixed: error uses debug :: parse_console();
  --  fixed: small typo in /image/edit_variations.html (issue #955789)
  --  fixed: fetch_tree_datasource now do hierarchical sort items correctly
  --  fixed: critical JS error: add_form_hidden_parameter function behaved bad...
      it added hidden input with id 'action' and this input overrided form.action
  --  fixed: if there was a try to log in directly from /root/login page, 
      login action would redirect you to /root/login again, 
      now this situation is checked and the user is redirected to /      
  --  fixed: render_attributes() function in input_form_element, 
      earlier it would set value attribute empty if there's no value in dataspace. 
      This behaviour(adopted from WACT) would delete 'value' value from template
  --  fixed: probable error recursion bug

  --  function load_project_tages added to template_compiler.inc.php to allow 
      working of project specific files
  --  metadata component refactored to implement inheritance for project specific metadata
  --  attribute 'url' added to each object at site map to allow proper displaying 
      of not only navigation_item objects
  --  for speed issues with images and files all dont track responses replaced with mere exit()
  --  RFE: new <grid:COUNTER> tag (issue #964271)
  --  RFE: got rid of create_object.php now it's a regular action of the admin_page object(issue #958092)
  --  new tree_path_rule rule
  --  got rid of PHP_SELF, REQUEST_URI constants, taken directly from $_SERVER!
  --  project specific setup_custom.php is included in project setup.php in a smart way 
      via dirname(__FILE__), this provides much better flexibility
  --  all tests except image tests run on Linux
  --  got rid of netpbm binary files, these should be stored as external ones
  --  new <status:PUBLISHED> tag
  --  new dont_track_response allows not to register object access in stats system, 
      this is especially effective for image and file objects
  --  changed display_image_action so that it returns dont_track_response if variation is 
      not 'original'
  --  changed display_file_action so that it returns dont_track_response if it 
      displays a file icon  
  --  new version.php describing current version of LIMB in detail
      (will hopefully help in package building automating tasks)
  --  fetch_sub_branch_datasource_component verifies datasource to be a subclass of 
      fetch_sub_branch_datasource
  --  CLI indexer.php script added for rebuilding full text index
  --  new <metadata:CHARSET> tag, it displays charset according to current MANAGEMENT_LOCALE_ID   
  --  'status' field in sys_site_object db table is considered to be a bit mask now
  --  new multi items functionality: delete, publish, unpublish, set_priority
  --  SimpleTest moved to /tests/lib
  --  test files renamed: *.group.php => *_group.class.php, * .test.php => *_test.class.php
  --  added 'children' field in sys_site_object_tree table, it breaks normalization a bit, 
      however it allows us to know for sure how many immidiate children certain parent has  
  --  new 'change children priority' functionality, priority field added to 
      sys_site_object_tree db table
  --  new <grid:BUTTON>, <grid:INPUT> tags, they make <grid:LIST> to display itself 
      inside <form> if they exist

Version 2.0.8
(12 Apr 2004, from /trunk)
svn://svn.berlios.de/limb/2.0.8

  --  fixed: image_object::_create_variations() method was called twice
  --  fixed: richedit, now can properly save values of multiple richedits on one page
  --  fixed: tree bug, now include_parent while get_sub_dbranch() works properly
  --  fixed: major bug in dir class - mkdir, rmdir, cp methods were buggy
  --  fixed: major bug in cron.php - it just crashed totally  

  --  new tree: uses tree drivers, materialized path and nested sets currently implemented
  --  basic multilanguage support:
      * available locales are declared in global $AVAILABLE_LOCALES
        (e.g, $AVAILABLE_LOCALES = array('ru', 'en'); 
      * MAGEMENT_LOCALE_ID definition depends on user::_locale_id property, 
        if no such property(or empty), CONTENT_LOCALE_ID used
      * new action in login object: change_user_locale, 
        allows to change current management locale
      * user::get_locale_id, user::set_locale_id

  --  pager_navigator tag now supports "mirror_of" attribute. If "mirror_of" 
      attribute is set, mirrored pager runtime component is used instead of 
      creating a new runtime component
  --  new <core:REQUEST_TRANSFER attribute='name'> tag which allows to append
      values from $_REQUEST to specific html tags attributes: a, form, frame, input, area.
      Atrribute 'attribute' defines what values exactly should be appended, multiple values 
      are comma separated
  --  better JS file_select, image_select, node_select implementation
  --  new <print:LINK> tag that renders it's content only if 'print_version' action
      is available, you can get a link to printed object via $link inside this tag  
  --  new <hint>,  <hint:LINK>, <hint:TITLE>, <hint:CONTENT> tags  
  --  new <core:REPEAT> tag
  --  new much improved events log report: multiple values, wildcards, negation in fields etc
      are supported
  --  beta revision of the most popular routes report  
  --  404, 403 error pages support, you are required to declare 
      ERROR_DOCUMENT_404, ERROR_DOCUMENT_403 in setup.php, also
      added not_found object to display 404 error message           
  --  I18N of input tags
  --  as also, lots of minor refactoring & bugfixes :)