Version 2.3RC2
(5 December 2004, from /php4/branches/trunk r944)
svn://svn.berlios.de/limb/php4/tags/2.3RC2

  --  all tabs removed from source code, no we use 2 spaces indent
  --  fixed: wrong method name in create_catalog_folder_action, create_navigation_item_action(thanx to dex_stern)
  --  http_response improved: now you can define redirect strategy, by default it uses http_redirect_strategy
  --  limb_application sets meta_redirect_strategy for http_response in the beginnning of its work
  --  quick'n'dirty hack in authentication_filter: you can define 'redirect_type' for action in controller. Currently 2 types supported: 'meta' and 'http'. For 'meta' type you can also define 'redirect_template_path'...
  --  initial revision of classes to output localized values of currencies were added. There's now special tag 'locale:CURRENCY' that formats and outputs currency value with currency symbol
  --  fetcher :: clear_cache() now also resets cached its node_mapped_by_request property
  --  set_publish_status_action refactored in order to provide better flexibility once for children classes
  --  recursive_navigation_datasource was added
  --  fixed: russian init_sql had missing initial values for messages db table
  --  fixed: a bug with template and component classes when root component was set to null. Now all runtime components have root component assigned.
  --  core_data_transer tag now server component tag and it has runtime component
  --  better 'for' variable check in core_optional and core_default tags
  --  ***Works only in IE!!!*** new TEMPLATE_EDITOR_PATH system constant allows to setup a favourite editor for opening templates right from the browser during templates debug session (DEBUG_TEMPLATE_ENABLED=true). Must have '%s', which will be substituted with file path to the template. By default: define('TEMPLATE_EDITOR_PATH', 'uedit32.exe %s');
  --  fixed: templates wouldn't open in editor during template debugging
  --  minor design changes
  --  authentication_filter will redirect to url specified by 'inaccessible_redirect' property in action properties definition in the according controller if this action is not accessible

Version 2.3RC1
(13 November 2004, from /php4/branches/trunk r907)
svn://svn.berlios.de/limb/php4/tags/2.3RC1

  --  ***WARNING***: BC break! API of DB schema, access_policy has changed!

  --  initial revision of new controller mechanism implementation, site objects can be dynamically assigned with required controllers
  --  initial version of the simpler and cleaner permissions: now you don't need to care about 'w' or 'r', they're merged into one simple conception whether the object is accessible or not. This led to many related changes:
       * access_policy refactoring and simplification
       * heavy db schema changes
       * 'permissions_required' attribute removed from all controllers
       * some permission related actions changes
       * some html templates changes
       * tests changes
  --  major refactoring of tests: new tree-alike flexible schema adopted from 3.0 branch
  --  stats html templates refactoring
  --  setup_custom.php => setup.override.php, this way it sounds more natural
  --  new setup constant AVAILABLE_LOCALES, where you should place locales ids separated with commas, no spaces!
  --  fixed: fs::mkdir() wouldn't create relative directory if upper directory is missing
  --  error message in case of recursive error is more detailed now(blank screen problem when db params are invalid)
  --  db_module now doesn't connect and select database in constructor, instead db_factory is a more appropriate place for this
  --  debug :: write() tries to detect debug recursions and fires die() if any
  --  cart stuff removed
  --  critical session class bug fix: db update could fail under some conditions
  --  session_history_manager little refactoring
  --  remove publish/unpublish actions from faq_folder_container_controller
  --  fixed: full_page_cache_filter & image_cache_filter won't do anything if response is already filled
  --  http_response :: is_redirected() method added
  --  '@' prepended to all setup defines
  --  initial version of <limb:VERSION> tag which renders contents of LIMB_DIR/version.php
  --  html templates comments cleanup
  --  TestManager class removed
  --  SimpleTest removed from svn, you have to download it and set up manually
  --  initial implementation of multi move functionality
  --  tree :: can_move_tree($id, $target_id) method added
  --  fixed: selector_tag won't make grid_list insert a form if it's already inside form_tag
  --  change_controller_action added which allows to change controller attached to the site object node
  --  object :: merge_attributes() method added
  --  object :: import_attributes() method refactored, there's no $merge flag anymore
  --  fixed: tree_toggle_action action wouldn't call tree::initialize_expanded_parents() in the case of 'recursive_search_for_node' present in request
  --  phpbb, chat stuff removed for now
  --  strings file format changed: you can't specify [extends] section since it's useless yet requires additional resources at run time
  --  image variations create/update a bit cleaner implementation(yet ugly, however this is fixed in 3.0)
  --  refactored create_file_action.class.php and edit_file_action.class.php
  --  added file_upload_max_size_rule, file_upload_partial_rule, file_upload_required_rule
  --  request refactored, now it also includes $_FILES information
  --  added uploaded_files_parser.class.php which parsers confusing $_FILES structure into more convenient one
  --  register_new_object_action sets 'root' parent node by default
  --  new site object registering procedure is more usable now:
        * controllers and site objects classes can be selected from drop down boxes
        * parent node can be selected via nice GUI
  --  fixed: date::get_day_of_week() bug, it used to return the previous day
  --  tree_navigation_datasource highlites the nav item only when pathes are equal and if there's an action it compares actions also
  --  events audit fixes and refactoring:
        * ip filter fixed
        * user filter fixed
        * status filter and highlight fixed
  --  initial version of debug.js which renders useful information for a webmaster
  --  fixed: locale class bug fix - get_month, month numeration begins at 0
  --  empty template interface improved
  --  fixed: a minor bug in grid.button.tag
  --  fixed: email rule won't valiadate addresses with trailing _, like user_@some.com
  --  the user shouldn't care about trailing slashes when defining LIMB_DIR and PROJECT_DIR, since php doesn't care about type and number of separators during file operations, the following measures were taken:
        * trailing slash added to all defininitions of constants based on LIMB_DIR and PROJECT_DIR
        * all LIMB_DIR . 'something' replaced with LIMB_DIR . '/something'
  --  fixed: grid_actions bug  - javascript submit_grid_form moved from tag to /sahred/js/common.js, otherwise there was a javascript bug in case of two grid lists on one page
  --  fixed: fs :: mkdir() should work better now when php is in safe, now it starts creating nested directories starting from the end
  --  JS functions scramble, get_msn_status_image and get_icq_status_image added
  --  pictured navigation datasource added (used for administration side)
  --  session history filter added by default to limb application
  --  fixed: request can merge complex arrays $_GET && $_POST
  --  fixed: grid action tag processes all attributes now
  --  fixed: save_object_priority moved to site_object class form deleted site_structure
  --  got rid of redundant site object classes (they can be simply replaced with site_object.class.php)
  --  media objects (files_folder, file_select, images_folder, image select) moved to /root/media
  --  version && node_select moved to /root/tools
  --  js toggle admin menu added
  --  admin navigation moved to /root/admin/navigation (usability changes)
  --  site_object_factory :: instance() removed, only site_object_factory :: create() available
  --  debug error handling constants removed, scalar values used instead, thus we don't need to include debug.class.php in setup
  --  minor templates change due to the new admin GUI
  --  setup_developer.php removed - use project setup_custom.php instead!!!

  --  LOTS of minor bug fixes!

Version 2.2.3
(29 September 2004, from /php4/branches/2.2.2 r737)
svn://svn.berlios.de/limb/php4/tags/2.2.3

  --  fixed: canada zip rule test
  --  fixed: site_object::_generate_auto_identifier() regular expression bug(issue #991978)
  --  2 new validation rules: cc_number_rule and unique_object_attribute_rule
  --  fixed: datasource component bug - now only one db fetch operation for multiple targets
  --  locale_definition filter now checks for already predefined CONTENT_LOCALE_ID, MANAGEMENT_LOCALE_ID
  --  initial revision of german locale
  --  http response can use template for redirect page
  --  JS: changed tab registration interface
  --  datasource tag refactored: all pager navigator stuff moved to datasource component
  --  datasource now interacts with pager (navigator) through runtime component code instead of generated code
  --  added warning near toggle richedit/textarea button
  --  JS: tabs now store active_tab_id in cookie, if use_cookie attribute of tabs tag is set to true
  --  fedex_shipping_locator adds an attribute 'ground' to ground shipping options
  --  JS: small adjustments of popup window dimensions calculation
  --  JS: popup width/height calculation fixed
  --  added fetch_one_datasource, that is useful when one need to fetch single object for certain locale
  --  fixed: fetcher cache flushing bug (was fixed earlier in 2.2 but wasn't merged)
  --  form tag now can access 'https' attribute
  --  user autologin functionality added (ability to set cookie and autologin user at next session using cookie data)
  --  fixed: Opera update form bug
  --  added attribute 'uri' to ad_block_object

  --  LOTS of minor bug fixes!

Version 2.2.2 Vacation Edition
(10 August 2004, from /php4/branches/2.2.2)
svn://svn.berlios.de/limb/php4/tags/2.2.2

  --  only group tests are available at the moment, confusing test cases link is removed for now
  --  compiler group removed, since it's empty and we're going to use new version of WACT
  --  project tests temporarily removed from the suite for now, they'll be somewhere else
  --  phpBB stuff removed, it'll be as an external package too
  --  chat stuff removed for now
  --  fixed: more strict canada zip rule
  --  strings.tag improved, i18n code helper will be executed only when force_compile=1
  --  "edtition" changed to "editing" in *.ini, *.php, *.html files, excuse our bad english :)
  --  improved pager tag with new {$pages_count} variable
  --  new DEBUG_TEMPLATE_I18N_ENABLED mode which renders i18n values with information on from what file this value is taken
  --  fixed a bug in access_policy class: access template don't delete all the previous access records.
  --  fixed a bug in bitwise operation (get unpublished status value) that makes it impossible to work more than with 1 status value.
  --  fixed: 304 cached images were displayed invalid
  --  initial revision of http_cache class
  --  improved & refactored http_response class, additional methods: get_content_type(),get_status() and get_directive()
  --  new session_startup_filter where session ibitialization takes place, moved from limb_application
  --  js richedit insert limb repositiry file improvement: the link has title with file title and size
  --  minor changes in cart_summ_component: now it outputs formated cart sum.
  --  now it is possible to have several grid:LIST tags with the same ID and grid:BUTTON tag in every grid:LIST and submit every grid separately.
  --  string class md5 hashing added for path storage
  --  new number_format tag(argch, i'm dreaming of new WACT output filters :) ), common usage is <locale:NUMBER_FORMAT hash_id='price'>, the component pulls the required locale info via locale class.
  --  new us_zip_rule and canada_zip_rule
  --  added localized message to http_request :: redirect();
  --  fixed cart: now items with 0 amount are not added to cart;
  --  lots fixes of small but annoying js bugs
  --  trim function added to common.js
  --  fixed mime_type, added method get_type_extension();
  --  some common templates changed for browsers compatibility
  --  new toggle richedit/textarea functionality which sets cookie in order to remember user preferences
  --  js optimize window can accept global WINDOW_WIDTH, WINDOW_HEIGHT to adjust popup window size when auto resizing shouldn't be applied
  --  fixed: redirect with node_id attribute would invoke infinite loop
  --  fixed: better popup window autoresizing
  --  richedit sets default cols, rows and iframe width, height if not specified
  --  fixed: HTMLArea would improperly strip base urls, this is fixed in extensions rather than in HTMLArea itself
  --  fixed: files can be selected from repository in Mozilla too
  --  fixed: images from media repositiry are selected in Mozilla too
  --  groups object access page now has groups filter. User now can set groups which permissions he wants to modify
  --  all depricated html tabs replaced with <tabs> rag
  --  RFE: initial revision of tabs tag(issue #986604)
  --  fixed: htmlTextarea glitch in Mozilla(issue #986571)
  --  richedit is replaced with original HTMLArea-3.0-rc1 and will be stored INTACT, hope to use it completely separated in future
  --  phpBB stuff temporarily deleted from /shared
  --  debug supports 3 masks of message outputting: DEBUG_OUTPUT_MESSAGE_SEND, DEBUG_OUTPUT_MESSAGE_STORE and DEBUG_OUTPUT_MESSAGE_NULL

Version 2.2.1
(27 July 2004, from /php4/branches/trunk)
svn://svn.berlios.de/limb/php4/tags/2.2.1

  --  SimpleTest 6 beta, throws warning if mock is declared more than once, some tests were fixed
      to conform to this nice behaviour
  --  initial revision of fr.ini locale(just for compatibility)
  --  initial revision of limb_application class, which turns root.php into an object, which also allows to
      define filters for custom project in a more flexible manner
  --  if visitor enters 0(zero) quantity for the specified cart item, the item is removed from the cart
  --  RFE SimpleTest 1.0 beta 6 upgrade(issue #982734)
  --  RFE debug memory consumption statistics(issue #978780)
  --  debug html output is written to sys::client_ip() . '-debug.html'
  --  fixed: small bug in debug class (typo 'verbosity_level' instead of 'level');
  --  fixed: resolve_template_compiled_file_name doesn't take into account current CONTENT_LOCALE_ID
  --  pictured_news added to limb
  --  fixed: user object doesn't call parent constructor
  --  fixed: generated password mail template resolving bug
  --  image_select can remember working path during user session(RFE #994493, partially)
  --  datasource tag will look for target in the root of the template if it's not found in the immediate parent
  --  fixed: setup_developer includes debug class and debug includes error.inc.php, that tries to setup error
      handler via debug, however at this point none of the constants are defined. debug doesn't include
      error.inc.php now.
  --  fixed: cache_lite a lot of bug fixes
  --  new shipping_locator super type class, which supports caching of shipping options
  --  new shiping_configuration class, it's used to configure shipping_locator, removing long arguments list
  --  new fake_shipping_locator which is for testing only since it doesn't make any real connect job
  --  node_select now remembers its working path during user session (RFE #994493, partially)
  --  initial arabic locale ini file added;
  --  title tag now can accept offset_path attribute;
  --  parent selection is added to several objects forms;
  --  fixed: WACT codewriter::get_temp_variable() returns invalid variable name, when there are many temp variables
      (more than 26?)
  --  a bit improved fedex shipping locator functionality
  --  core:STATUS tag does not require constant to be defined at compile time.
  --  form_edit_site_object_action :: _valid_perform_prepare_data(&$data) added for flexible inheritance purpose
  --  initial version of fedex_shipping_locator fetching FedEx shipping services and prices on-line. Html fetching
      is done via curl and html parsing is done via XML_HTMLSax.
  --  complex_array :: sort_array($array, $sort_params, $preserve_keys) new $preserve_keys flag, default is true
  --  small javascript checkbox fix
  --  tree class improvements: now tree wouldn't init expanded parents by default, call
      $tree->initialize_expanded_parents() instead where it's required. And this is required in 2 places
      now(AFAIK): site structure and objects access. That's it. This method should be explicitly called if you want
      to see a neat toggable tree. This allows to decrease visitor session size greatly and makes a little speed up!
  --  fixed: tree :: initialize_tree_driver($driver) - omits $driver argument, uses default
      materialized_path_driver always
  --  fixed: Extra input (issue #991978)
  --  fixed: Error in Fetcher.class (issue #991938)
  --  if user has no rights for the object or action, he is redirected to the login page every time,
      it seems to be more usable
  --  fixed: <core:htmlspecialchars> uses ENT_QUOTES option now
  --  fixed: invalid_value_rule would throw an error comparing int 0 with any string(wrong type juggling)
  --  fixed: project db tests wouldn't execute at all
  --  project site objects tests are separated from the project db tests, no __project_check_group.class.php,
      project_db_check_group.class.php and project_site_objects_check_group.class.php instead
  --  objects access actions and templates refactored (memory leak fixed): fetching tree moved from template to
      action, access policy loads policy arrays only for displayed objects, not for all tree
  --  new invalid_value_rule, which makes sure that the specified value is not valid and validator will trigger
      an error. This is especially useful for droplists with default meaningless value, like '----',
      '...choose one' etc
  --  new complex_array::array_map_recursive() static method, which works just like array_map, yet allows to
      process nested arrays
  --  uri class modified: it makes use of complex_array::array_map_recursive() to urlencode nested query items and
      complex_array::to_flat_array() to properly render nested query items
  --  added order type 'rand()' because of MySQL and other databases can perform ORDER BY RAND() operation.
      (Needs some another refactoring to abstract method RAND() at database layer)
  --  implementation of db_cart_handler which allows to 'remember' cart items for registered users, furthermore it
      transparantly merges visitor cart items with registered user items, if visitor placed some items to cart and
      logged in later
  --  setlocale(LC_ALL, 'ru') removed from root.php, now it's locale_definition_filter's responsibility. This
      explicit call was moved to locale::setlocale() method and the decision which locale identifier should be
      used is decided upon LC_ALL property value defined in locale ini file.
  --  VERY important modification: all session objects are not required to have __get_class_path() method anymore,
      instead you have to define in constructor '__session_class_path' attribute with the same value.
      This is more flexible, since sometimes we can have objects which are not instantiated via
      instantiate_session_object (i.e cart_items). Now session handler finds in the session BLOB all
      __session_class_path serialized values and includes the appropriate files.
  --  cart item and user objects changed according to new session objects policy
  --  new initial cart_handlers functionality
  --  added tag POLL_ACTIVE. it can be useful in projects with full_page_cache. renders it's contents whether
      user can vote or not (in contrast to POLL tag);
  --  poll_container_controller and vote_action corrected
  --  RFE: better formatting of the long debug strings, improved SQL execution control,
      small debug class refactoring(issue #987460)
  --  materialized_path_driver::get_root_nodes() small cache improvement, root nodes are actually retrieved
      only once within one transaction, however this is experimental and subject to change!
  --  'created date' and 'modified date' attributes now can be custom defined while creating object
  --  fixed: select multiple functionality finally got repaired and re-implemented
  --  form_edit_site_object_action::_init_dataspace() uses its _load_object_data() instead of
      fetch_requested_object() thus providing better flexibility for decendants
  --  navigation item changed:
      * added publish, unpublish ations to controller;
      * added new attribute 'new_window' which can be used to determine whether open link in new window or not.
      ATTENTION: this leads to adding new field 'new_window' in 'navigation_item' table in database;
      * templates corrected
  --  fixed: fs::mkdir(), if such a directory already exists it just returns true now. Especially useful for
      safe_mode!
  --  if there's no 'popup' attribute in the request, the change user locale action will redirect to
      $_SERVER['HTTP_RESPONSE'] if it exists and to '/' if not
  --  VAR_URL => VAR_WEB_DIR, from now it'll be a common practice to insert WEB before DIR to indicate a
      web accessible path to directory(e.g IMAGE_CACHE_WEB_DIR)
  --  RFE: Mozilla tooltips(issue #984895)
  --  image caching has been greatly improved: now it's way more optimized since it analyzes which images were already
      cached so overhead fectching never happens. It can be effectively used even without full page caching and
      later it'll be(seems like) pretty easy to delete cache for the specific changed images
  --  fixed: small typo in locale string
  --  send_plain_mail.inc.php now included where it's used
  --  fixed: simple navigation datasource wouldn't properly highlight uris from different hosts if they have
      similar pathes
  --  image rotate tests are commented, since this functionality is not available all the the time.
      For example, imagerotate is available only when php is compiled with bundled gd. In the future the
       image library should check if this function is available and throw an exception...
  --  swf stuff removed for now...
  --  fixed: nested sets driver returns wrong max child identifier
  --  fixed: max identifier problem(issue #982675)
  --  fixed: template source display action crashed with force_compile flag set to 0
  --  http_response class new methods readfile(), file_sent(), use_client_cache() and minor fixes, ALL
      http response stuff MUST be made using this class
  --  fixed: display_image_action and display_file_action classes, they use http_response class properly
      (hopefully there will be tests for them soon)
  --  fixed: stats_event_filter - it used non-existent merge method of the request object

Version 2.2
(29 June 2004, from /php4/branches/trunk)
svn://svn.berlios.de/limb/php4/tags/2.2

  --  ***WARNING***: BC break! API of controllers, actions has changed!

  --  fixed: db_module - now column_types array passed into sql_update method

  --  initial revision of the interception filters implementation,
      this led to the vast refactoring of ALL actions. Have a look at root.php :)
  --  new request class resposible for incapsulating of all request specific operations,
      this one should also help in future testing. You can't just use $_REQUEST['parameter'] variable any longer,
      use request->get_attribute('parameter') instead
  --  new http_response class responsible for 'deferred' client responses, redirects, headers etc
  --  optimizations of fetcher
  --  got FINALLY rid of old confusing responses classes! The execution status is stored in request instead
  --  new jip_filter implemented. By default the fetcher now assigns actions for the requested object only.
      jip_filter enables JIP if the user is logged in and he is a member of at least one of groups
      listed in jip_groups.ini file (stored in settings dir).
  --  fixed: node_links_datasource bug - it caused to undefined array index error if the linked object was not fetched.
  --  minor optimizations based on XDebug output: locale, template tags, etc

  --  all validation rules are instantiated via resolve_handle, it touched all form actions in some way
  --  create_object function in objects_support.inc.php was refactored, it uses resolve_handle too, no eval no more!
  --  new refactored version of the uri class
  --  RFE: minor changes flag implemented(issue #958901)
  --  RFE: flexible page caching(issue #970358)
  --  RFE: IMG caching functionality(issue #977471)
  --  new register_testing_ini function for testing purposes allowing to override ini file access inside test case
  --  WACT output cache renamed, <core:OUTPUTCACHE> => <core:LITECACHE>, <core:OUTPUTCACHE> is used for the page partial
      caching
  --  ini class is heavily tested and refactored
  --  fetch_one_by_id() global function added to 'shortcut' fetcher :: fetch_one_by_id()
  --  added new datatype 'float' to db_module. It includes some dirty hacking - international float format
      transformations, e.g. using comma instead of dot separator
  --  /core/lib/locale renamed to /core/lib/i18n
  --  new <control_button> tag
  --  refactored common.js: from now it will be a common practice to pass DOM element itself not its id
      since there maybe several DOM elements with the same id on the page
      (which is likely not valid, yet it's not that easy to avoid :( )
  --  dir class was renamed to fs(file system) class since it's a more appropriate name
  --  new dataspace_registry: instance method was removed from dataspace, it makes dataspace much cleaner and
      will help us to use WACT implementation transparently
  --  cron manager and cron jobs new implementation
  --  fetcher :: flush_cache() is called in form_edit_site_object action and set_publish_status action.
  --  response => http_response, response is just an abstract class now,
  --  new nonbuffered_response class added
  --  <form> tag MUST have 'name' attribute now
  --  search_fetcher :: fetch() now can analyze $params['restricted_classes'] && $params['allowed_classes'] and
      transfer their ids to full_text_search :: find() method, which returns object ids only with needed class_ids.
      This is useful when you want to execute full text search on site excluding several object types from result
      or including in result only several needed object types.
      search_fetcher :: search_fetch_sub_branch() can't perform such restriction in easy way for now because
      it works directly with tree.

Version 2.1.1
(16 Jun 2004, from /php4/branches/trunk)
svn://svn.berlios.de/limb/php4/tags/2.1.1

  --  ***WARNING***: BC break! API of controllers, actions has changed!
  --  controllers, actions are greatly refactored in order to simplify inheritance(packages preparation)
  --  RFE: unified delete site object action (issue #959366)
  --  new SiteObjectsTestManager allowing to run specific site object testers
  --  russian language pack added to phpbb forum
  --  node select component doesn't try to get mapped node id if value is not set, it's a
      form_create_site_object's resposibility to set it ptoperly, thus we decrease coupling, i guess...
  --  create_link_action doesn't set non-existent node id now, there's simply no need for that(see above)
  --  RFE: initial revision of site objects linking functionality(#970235 issue)
  --  RFE: it's possible to select parent node with node select component (part of the #971013 issue)
  --  new tree_node_id_rule
  --  added tree_node_id_rule into form_create_site_object_action and form_edit_site_object_action
  --  request_state component now takes its value from the $_REQUEST on the first display only

Version 2.2
(04 May 2004, from /php4/branches/trunk)
svn://svn.berlios.de/limb/php4/tags/2.2

  --  ***WARNING***: BC break! API of controllers, actions has changed!

  --  fixed: db_module - now column_types array passed into sql_update method
  --  fixed: template source display action crashed with force_compile flag set to 0(issue #981986)
  --  fixed: materialized_path::get_max_child_identifier() error value(issue #982675)

  --  initial revision of the interception filters implementation,
      this led to the vast refactoring of ALL actions. Have a look at root.php :)
  --  new request class resposible for incapsulating of all request specific operations,
      this one should also help in future testing. You can't just use $_REQUEST['parameter'] variable any longer,
      use request->get_attribute('parameter') instead
  --  new http_response class responsible for 'deferred' client responses, redirects, headers etc
  --  optimizations of fetcher
  --  got FINALLY rid of old confusing responses classes! The execution status is stored in request instead
  --  new jip_filter implemented. By default the fetcher now assigns actions for the requested object only.
      jip_filter enables JIP if the user is logged in and he is a member of at least one of groups
      listed in jip_groups.ini file (stored in settings dir).
  --  fixed: node_links_datasource bug - it caused to undefined array index error if the linked object was not fetched.
  --  minor optimizations based on XDebug output: locale, template tags, etc
  --  all validation rules are instantiated via resolve_handle, it touched all form actions in some way
  --  create_object function in objects_support.inc.php was refactored, it uses resolve_handle too, no eval no more!
  --  new refactored version of the uri class
  --  RFE: minor changes flag implemented(issue #958901)
  --  RFE: flexible page caching(issue #970358)
  --  RFE: IMG caching functionality(issue #977471)
  --  new register_testing_ini function for testing purposes allowing to override ini file access inside test case
  --  WACT output cache renamed, <core:OUTPUTCACHE> => <core:LITECACHE>, <core:OUTPUTCACHE> is used for the page partial
      caching
  --  ini class is heavily tested and refactored
  --  fetch_one_by_id() global function added to 'shortcut' fetcher :: fetch_one_by_id()
  --  added new datatype 'float' to db_module. It includes some dirty hacking - international float format
      transformations, e.g. using comma instead of dot separator
  --  /core/lib/locale renamed to /core/lib/i18n
  --  new <control_button> tag
  --  refactored common.js: from now it will be a common practice to pass DOM element itself not its id
      since there maybe several DOM elements with the same id on the page
      (which is likely not valid, yet it's not that easy to avoid :( )
  --  dir class was renamed to fs(file system) class since it's a more appropriate name
  --  new dataspace_registry: instance method was removed from dataspace, it makes dataspace much cleaner and
      will help us to use WACT implementation transparently
  --  cron manager and cron jobs new implementation
  --  fetcher :: flush_cache() is called in form_edit_site_object action and set_publish_status action.
  --  response => http_response, response is just an abstract class now,
  --  new nonbuffered_response class added
  --  <form> tag MUST have 'name' attribute now
  --  search_fetcher :: fetch() now can analyze $params['restricted_classes'] && $params['allowed_classes'] and
      transfer their ids to full_text_search :: find() method, which returns object ids only with needed class_ids.
      This is useful when you want to execute full text search on site excluding several object types from result
      or including in result only several needed object types.
      search_fetcher :: search_fetch_sub_branch() can't perform such restriction in easy way for now because
      it works directly with tree.

Version 2.1.1
(16 Jun 2004, from /php4/branches/trunk)
svn://svn.berlios.de/limb/php4/tags/2.1.1

  --  ***WARNING***: BC break! API of controllers, actions has changed!
  --  controllers, actions are greatly refactored in order to simplify inheritance(packages preparation)
  --  RFE: unified delete site object action (issue #959366)
  --  new SiteObjectsTestManager allowing to run specific site object testers
  --  russian language pack added to phpbb forum
  --  node select component doesn't try to get mapped node id if value is not set, it's a
      form_create_site_object's resposibility to set it ptoperly, thus we decrease coupling, i guess...
  --  create_link_action doesn't set non-existent node id now, there's simply no need for that(see above)
  --  RFE: initial revision of site objects linking functionality(#970235 issue)
  --  RFE: it's possible to select parent node with node select component (part of the #971013 issue)
  --  new tree_node_id_rule
  --  added tree_node_id_rule into form_create_site_object_action and form_edit_site_object_action
  --  request_state component now takes its value from the $_REQUEST on the first display only

Version 2.1
(04 May 2004, from /php4/branches/2.0.8)
svn://svn.berlios.de/limb/tags/php4/tags/2.1

  --  fixed: node select component would set its value wrong
  --  fixed: control_flow.php bug (issue #969501)
  --  fixed: value localization in form components moved at runtime(issue #968107)
  --  fixed: JS window.onunload function for richedit
  --  fixed: pager sporadically wouldn't show paginated links (issue #964194)
  --  fixed: <hint> tag is Mozilla, Opera compatible (issue #964192)
  --  fixed: full_text_search can perform fulltext search with mysqlversion >= 3.23.
      and it returns empty result instead of raising error.
  --  fixed: all JS document.all[...] calls replaced with document.getElementById
  --  fixed: materialized_path_driver for tree bug fixed.
      Now, if there are 2 or more sub_trees in objects tree,
      get_sub_branch() method with 'check_expanded_parents' option works properly
      (result set included nodes from another sub_tree before)
  --  fixed: 'has_more_than_one_page' typo in pager tags, components
  --  fixed: mod_rewrite compatibility
  --  fixed: error uses debug :: parse_console();
  --  fixed: small typo in /image/edit_variations.html (issue #955789)
  --  fixed: fetch_tree_datasource now do hierarchical sort items correctly
  --  fixed: critical JS error: add_form_hidden_parameter function behaved bad...
      it added hidden input with id 'action' and this input overrided form.action
  --  fixed: if there was a try to log in directly from /root/login page,
      login action would redirect you to /root/login again,
      now this situation is checked and the user is redirected to /
  --  fixed: render_attributes() function in input_form_element,
      earlier it would set value attribute empty if there's no value in dataspace.
      This behaviour(adopted from WACT) would delete 'value' value from template
  --  fixed: probable error recursion bug

  --  function load_project_tages added to template_compiler.inc.php to allow
      working of project specific files
  --  metadata component refactored to implement inheritance for project specific metadata
  --  attribute 'url' added to each object at site map to allow proper displaying
      of not only navigation_item objects
  --  for speed issues with images and files all dont track responses replaced with mere exit()
  --  RFE: new <grid:COUNTER> tag (issue #964271)
  --  RFE: got rid of create_object.php now it's a regular action of the admin_page object(issue #958092)
  --  new tree_path_rule rule
  --  got rid of PHP_SELF, REQUEST_URI constants, taken directly from $_SERVER!
  --  project specific setup_custom.php is included in project setup.php in a smart way
      via dirname(__FILE__), this provides much better flexibility
  --  all tests except image tests run on Linux
  --  got rid of netpbm binary files, these should be stored as external ones
  --  new <status:PUBLISHED> tag
  --  new dont_track_response allows not to register object access in stats system,
      this is especially effective for image and file objects
  --  changed display_image_action so that it returns dont_track_response if variation is
      not 'original'
  --  changed display_file_action so that it returns dont_track_response if it
      displays a file icon
  --  new version.php describing current version of LIMB in detail
      (will hopefully help in package building automating tasks)
  --  fetch_sub_branch_datasource_component verifies datasource to be a subclass of
      fetch_sub_branch_datasource
  --  CLI indexer.php script added for rebuilding full text index
  --  new <metadata:CHARSET> tag, it displays charset according to current MANAGEMENT_LOCALE_ID
  --  'status' field in sys_site_object db table is considered to be a bit mask now
  --  new multi items functionality: delete, publish, unpublish, set_priority
  --  SimpleTest moved to /tests/lib
  --  test files renamed: *.group.php => *_group.class.php, * .test.php => *_test.class.php
  --  added 'children' field in sys_site_object_tree table, it breaks normalization a bit,
      however it allows us to know for sure how many immidiate children certain parent has
  --  new 'change children priority' functionality, priority field added to
      sys_site_object_tree db table
  --  new <grid:BUTTON>, <grid:INPUT> tags, they make <grid:LIST> to display itself
      inside <form> if they exist

Version 2.0.8
(12 Apr 2004, from /php4/branches/trunk)
svn://svn.berlios.de/limb/php4/tags/2.0.8

  --  fixed: image_object::_create_variations() method was called twice
  --  fixed: richedit, now can properly save values of multiple richedits on one page
  --  fixed: tree bug, now include_parent while get_sub_dbranch() works properly
  --  fixed: major bug in dir class - mkdir, rmdir, cp methods were buggy
  --  fixed: major bug in cron.php - it just crashed totally

  --  new tree: uses tree drivers, materialized path and nested sets currently implemented
  --  basic multilanguage support:
      * available locales are declared in global $AVAILABLE_LOCALES
        (e.g, $AVAILABLE_LOCALES = array('ru', 'en');
      * MAGEMENT_LOCALE_ID definition depends on user::_locale_id property,
        if no such property(or empty), CONTENT_LOCALE_ID used
      * new action in login object: change_user_locale,
        allows to change current management locale
      * user::get_locale_id, user::set_locale_id

  --  pager_navigator tag now supports "mirror_of" attribute. If "mirror_of"
      attribute is set, mirrored pager runtime component is used instead of
      creating a new runtime component
  --  new <core:REQUEST_TRANSFER attribute='name'> tag which allows to append
      values from $_REQUEST to specific html tags attributes: a, form, frame, input, area.
      Atrribute 'attribute' defines what values exactly should be appended, multiple values
      are comma separated
  --  better JS file_select, image_select, node_select implementation
  --  new <print:LINK> tag that renders it's content only if 'print_version' action
      is available, you can get a link to printed object via $link inside this tag
  --  new <hint>,  <hint:LINK>, <hint:TITLE>, <hint:CONTENT> tags
  --  new <core:REPEAT> tag
  --  new much improved events log report: multiple values, wildcards, negation in fields etc
      are supported
  --  beta revision of the most popular routes report
  --  404, 403 error pages support, you are required to declare
      ERROR_DOCUMENT_404, ERROR_DOCUMENT_403 in setup.php, also
      added not_found object to display 404 error message
  --  I18N of input tags
  --  as also, lots of minor refactoring & bugfixes :)