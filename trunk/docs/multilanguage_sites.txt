
Наш опыт создания мультиязычных сайтов включает: создание основного сайта на русском языке, администрирование сделано на русском также + отдельная ветка для английского контента. То же самое делалось для англо-русского сайта, то есть с английским администрированием. К сожалению, мы еще ни разу не пробовали создавать сайты с различными центрами администрирования для различных веток, однако мы считаем, что при помощи LIMB эту проблему можно легко решить.


Основная проблема – это добавление новых объектов в любую ветку сайта. Для того, чтобы создавать мультиязычные сайты на LIMB вы должны хорошо предлавлять механизмы работы с локалями, работу шаблонной системы и правил разрешения имен файлов, систему прав, а также создание объектов в любом месте сайта. 

Итак, для создания ветки, необходимо зарегистрировать первый объект новой ветки, например объект класса main_page с путем ‘/ru’. Далее необходимо указать LOCALE_ID для этого объекта. 

Далее нужно решить, будете ли вы создавать отдельный административный шаблон для новой ветки сайта. Создание отдельного центра администрирования может быть полезным, если сайтом будут управлять несколько администраторов.
Вообще говоря, создание отдельной ветки можно производить по такому алгоритму:
1) Если нужен отдельный объект, то мы его создаем и модифицируем шаблоны так, чтобы они показывали только информацию для новой ветки.
2) Если отдельный объект не нужен, то мы просто меняем шаблон для того, чтобы он отражал состояние в обоих ветках.

Например, нам нужен новый центр администрирования для управления веткой. Мы создает объект класса admin_page под путем /ru/admin. Далее в каталог шаблонов some_path/templates/_ru/admin/ кладем копию текущего шаблона, правим там что необходимо, например, дизайн, надписи, навигацию и прочее.

Следующим этапом после создания корня ветки скорее всего будет создание нового объекта для просмотра структуры сайта (например, /ru/admin/site_structure – предполагается, что объект /ru/admin у вас уже есть) и сделать для него новый шаблон (в ветке /templates/_ru/site_stucture) или же модифицировать существующий, как показано ниже. Дело в том, что механизмы выборки из дерева позволяет получать только объекты начиная с реального объекта, например, ‘/root’. Нельзя получить объекты по пути ‘/’, по крайней мере, пока и приходится это ограничение обходить.

<locale:LOCALE name=’en’>
<fetch:SUB_BRANCH target='tree'>
	<core:PARAMETER name='datasource_path' value='/fetch_tree_datasource'>
	<core:PARAMETER name='path' value='/root'>
	<core:PARAMETER name='depth' value='-1' type='numeric'>
	<core:PARAMETER name='check_expanded_parents' value='1' type='boolean'>
	<core:PARAMETER name='include_parent' value='1' type='boolean'>
	<core:PARAMETER name='restrict_by_class' value='0' type='boolean'>
</fetch:SUB_BRANCH>
      <core:INCLUDE file=’/site_structure/site_structure_items.html’>
</locale:LOCALE>

<locale:LOCALE name=’en’>
<fetch:SUB_BRANCH target='tree'>
	<core:PARAMETER name='datasource_path' value='/fetch_tree_datasource'>
	<core:PARAMETER name='path' value='/ru'>
	<core:PARAMETER name='depth' value='-1' type='numeric'>
	<core:PARAMETER name='check_expanded_parents' value='1' type='boolean'>
	<core:PARAMETER name='include_parent' value='1' type='boolean'>
	<core:PARAMETER name='restrict_by_class' value='0' type='boolean'>
</fetch:SUB_BRANCH>

<core:INCLUDE file=’/site_structure/site_structure_items.html’>
</locale:LOCALE>

Второй способ – это простая модификация шаблона для существующего объекта (/root/admin/site_structure). Мы просто копируем операцию выборки и используем еще один тег <grid:LIST>.

Все изменения шаблонов лучше производить в каталоге шаблонов проекта, чтобы не править базовые шаблоны, особенно если вы ведете несколько проектов на одной версии LIMB. 

Первый способ является более правильным, однако мы сами чаще используем второй способ, чтобы не создавать лишних объектов. 

Далее, используя подобную технику, можно создать прочие объекты: новости, документы, анонсы и прочее.


